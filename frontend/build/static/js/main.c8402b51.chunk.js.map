{"version":3,"sources":["components/container.js","components/movie.js","App.js","index.js"],"names":["styled","div","console","log","trackerList","trackers","forEach","tracker","site","push","MovieWrapper","AddMovieButton","a","Poster","img","poster","title","hash","torrent","downloadMovie","url","encodeURI","join","constructMagnet","useState","downloading","setDownloading","className","onClick","e","alt","src","Torrent","endpoint","App","query_term","updateQuery","movies","updateMovies","page","setPageNumber","search","p","yts","listMovies","limit","movs","movie","fetch","headers","method","body","JSON","stringify","response","json","status","LOADING","value","onChange","target","type","placeholder","map","index","torrents","medium_cover_image","length","then","ok","catch","err","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c8402b51.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: auto;\r\n  max-width: 1024px;\r\n  padding: 10px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport trackerList from \"../trackers.json\";\r\nconsole.log(trackerList);\r\nconst trackers = [];\r\ntrackerList.forEach((tracker) => {\r\n  tracker.forEach((site) => {\r\n    trackers.push(site);\r\n  });\r\n});\r\nconsole.log(trackers);\r\nconst MovieWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst AddMovieButton = styled.a`\r\n  position: absolute;\r\n  display: inline-block;\r\n  padding: 12px 12px 10px;\r\n  border: 0;\r\n  left: 10px;\r\n  top: 10px;\r\n  border-radius: 3px;\r\n  background: #bf4d28;\r\n  text-decoration: none;\r\n  transition: all 1.2s ease-in-out;\r\n  &.downloading {\r\n    cursor: none;\r\n    opacity: 0.5;\r\n  }\r\n  img {\r\n    width: 30px;\r\n  }\r\n\r\n  &:hover {\r\n    animation: pulse 0.2s 2 both;\r\n  }\r\n\r\n  @keyframes pulse {\r\n    from {\r\n      transform: scale3d(1, 1, 1);\r\n    }\r\n\r\n    50% {\r\n      transform: scale3d(1.05, 1.05, 1.05);\r\n    }\r\n\r\n    to {\r\n      transform: scale3d(1, 1, 1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Poster = styled.img`\r\n  border-radius: 3px;\r\n  border: 2px solid black;\r\n  padding: 0px;\r\n  margin: 3px;\r\n  min-height: 200px;\r\n`;\r\n\r\nconst constructMagnet = (hash, title) => {\r\n  return `magnet:?xt=urn:btih:${hash}&dn=${encodeURI(title)}&tr=${trackers.join(\r\n    \"&tr=\"\r\n  )}`;\r\n};\r\n\r\nexport default ({ poster, title, torrent: { hash }, downloadMovie }) => {\r\n  const url = constructMagnet(hash, title);\r\n  console.log(url);\r\n  const [downloading, setDownloading] = useState(false);\r\n  return (\r\n    <MovieWrapper>\r\n      <AddMovieButton\r\n        className={downloading ? \"downloading\" : \"new\"}\r\n        onClick={async (e) => {\r\n          if (await downloadMovie({ url, hash, title, poster })) {\r\n            setDownloading(true);\r\n          }\r\n        }}\r\n      >\r\n        <img\r\n          alt=\"download icon\"\r\n          src=\"https://static.thenounproject.com/png/261370-200.png\"\r\n        />\r\n      </AddMovieButton>\r\n      <Poster src={poster} />\r\n    </MovieWrapper>\r\n  );\r\n};\r\n","//import \"./styles.css\";\nimport { useState } from \"react\";\nimport yts from \"yts\";\nimport Container from \"./components/container\";\nimport Movie from \"./components/movie\";\n\nconst Torrent = {};\nTorrent.COMPLETE = \"complete\";\nTorrent.ERROR = \"error\";\nTorrent.INFO_HASH = \"info_hash\";\nTorrent.LOADING = \"loading\";\nTorrent.PEER = \"peer\";\nTorrent.PROGRESS = \"progress\";\nTorrent.READY = \"ready\";\n\nvar endpoint = \"\";\n\nfetch(`${endpoint}/local`, { method: \"post\" })\n  .then((response) => {\n    if (!response.ok) {\n      console.log(\"switching to localhost\");\n      endpoint = \"https://localhost\";\n    }\n  })\n  .catch((err) => {\n    console.log(\"switching to localhost\");\n    endpoint = \"https://localhost\";\n  });\n\nexport default function App() {\n  const [query_term, updateQuery] = useState();\n  const [movies, updateMovies] = useState([]);\n  const [page, setPageNumber] = useState(1);\n  const handleQueryUpdate = (e) => {\n    updateQuery(e.target.value);\n  };\n\n  const search = async (p) => {\n    setPageNumber(p);\n    const { movies: movs } = await yts.listMovies({\n      query_term,\n      limit: 50,\n      page: p,\n    });\n    updateMovies(movs);\n  };\n  const downloadMovie = async (movie) => {\n    // const query = Object.keys(movie)\n    //   .map((key) => key + \"=\" + movie[key])\n    //   .join(\"&\");\n    const response = await fetch(`${endpoint}`, {\n      headers: {\n        \"Bypass-Tunnel-Reminder\": \"test\",\n        \"User-Agent\": \"nothing\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"post\",\n      body: JSON.stringify(movie),\n    });\n\n    const rsjson = await response.json();\n    if (rsjson.status == Torrent.LOADING) {\n      return true;\n    } else {\n      return false;\n    }\n    console.log(response);\n  };\n\n  return (\n    <>\n      <Container>\n        <input\n          value={query_term}\n          onChange={handleQueryUpdate}\n          type=\"text\"\n          placeholder=\"Movie/Series\"\n        />\n        <button\n          onClick={() => {\n            search(1);\n          }}\n        >\n          Search\n        </button>\n        {page > 1 ? (\n          <button\n            onClick={() => {\n              search(page - 1);\n            }}\n          >\n            {\"<-\"}\n          </button>\n        ) : (\n          \"\"\n        )}\n\n        <button\n          onClick={() => {\n            search(page + 1);\n          }}\n        >\n          {\"->\"}\n        </button>\n      </Container>\n      <Container>\n        {movies.map(\n          ({ torrents, medium_cover_image: poster, title }, index) => {\n            return (\n              <Movie\n                key={torrents[torrents.length - 1].hash}\n                downloadMovie={downloadMovie}\n                poster={poster}\n                title={title}\n                torrent={torrents[torrents.length - 1]}\n              />\n            );\n          }\n        )}\n      </Container>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}